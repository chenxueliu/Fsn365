{"ast":null,"code":"var _jsxFileName = \"E:\\\\2020\\u5DE5\\u4F5C\\u5BA4\\\\fsn365\\\\pages\\\\blocks\\\\index.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport \"./blocks.less\";\nimport axios from \"axios\";\nimport Nav from \"../Nav/index\";\nimport Footer from \"../component/footer/index\";\nimport Navinput from \"../component/navinput/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nconst columns = [{\n  id: \"height\",\n  label: \"Block\",\n  minWidth: 170,\n  align: \"center\"\n}, {\n  id: \"timestamp\",\n  label: \"Age\",\n  minWidth: 80,\n  align: \"center\"\n}, {\n  id: \"miner\",\n  label: \"Miner\",\n  minWidth: 170,\n  align: \"center\",\n  format: value => value.toLocaleString(\"en-US\")\n}, {\n  id: \"txns\",\n  label: \"Txn\",\n  minWidth: 170,\n  align: \"center\",\n  format: value => value.toLocaleString(\"en-US\")\n}, {\n  id: \"reward\",\n  label: \"Reward\",\n  minWidth: 170,\n  align: \"center\",\n  format: value => value.toFixed(2)\n}];\n\nconst blockel = v => {\n  console.log(v);\n};\n\nexport default function Blocks() {\n  const {\n    0: menuisShow,\n    1: setmenuisShow\n  } = useState(false);\n  const {\n    0: text,\n    1: setText\n  } = useState(\"All Filters\");\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n\n  const setmenuShow = (e, a) => {\n    e.nativeEvent.stopImmediatePropagation();\n    e.stopPropagation();\n    setmenuisShow(a);\n  };\n\n  const setTexts = a => {\n    setText(a);\n    setmenuisShow(false);\n  };\n\n  const setSearchHandle = e => {\n    setSearch(e.target.value);\n  };\n\n  const onsubmitHandle = () => {\n    console.log(search);\n  };\n\n  const {\n    0: arr,\n    1: setArr\n  } = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.get(\"https://api.fsn365.com/blocks\");\n      setArr(result.data.data.data);\n    };\n\n    fetchData();\n  }, []);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(Navinput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"blocksdiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"blockstext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"Blocks\"), __jsx(Paper, {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(TableContainer, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, columns.map(column => __jsx(TableCell, {\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, column.label)))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, arr.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.reward,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 23\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return __jsx(TableCell, {\n        onClick: blockel(value),\n        key: column.id,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 29\n        }\n      }, column.format && typeof value === \"number\" ? column.format(value) : value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 50, 100],\n    component: \"div\",\n    count: arr.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["E:/2020工作室/fsn365/pages/blocks/index.jsx"],"names":["React","useState","useEffect","axios","Nav","Footer","Navinput","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","blockel","v","console","log","Blocks","menuisShow","setmenuisShow","text","setText","search","setSearch","setmenuShow","e","a","nativeEvent","stopImmediatePropagation","stopPropagation","setTexts","setSearchHandle","target","onsubmitHandle","arr","setArr","fetchData","result","get","data","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","map","column","slice","row","reward","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./blocks.less\";\r\nimport axios from \"axios\";\r\nimport Nav from \"../Nav/index\";\r\nimport Footer from \"../component/footer/index\";\r\nimport Navinput from \"../component/navinput/index\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst columns = [\r\n  { id: \"height\", label: \"Block\", minWidth: 170, align: \"center\" },\r\n  { id: \"timestamp\", label: \"Age\", minWidth: 80, align: \"center\" },\r\n  {\r\n    id: \"miner\",\r\n    label: \"Miner\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    format: value => value.toLocaleString(\"en-US\")\r\n  },\r\n  {\r\n    id: \"txns\",\r\n    label: \"Txn\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    format: value => value.toLocaleString(\"en-US\")\r\n  },\r\n  {\r\n    id: \"reward\",\r\n    label: \"Reward\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    format: value => value.toFixed(2)\r\n  }\r\n];\r\n\r\nconst blockel = v => {\r\n  console.log(v);\r\n};\r\nexport default function Blocks() {\r\n  const [menuisShow, setmenuisShow] = useState(false);\r\n  const [text, setText] = useState(\"All Filters\");\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const setmenuShow = (e, a) => {\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    e.stopPropagation();\r\n    setmenuisShow(a);\r\n  };\r\n\r\n  const setTexts = a => {\r\n    setText(a);\r\n    setmenuisShow(false);\r\n  };\r\n\r\n  const setSearchHandle = e => {\r\n    setSearch(e.target.value);\r\n  };\r\n\r\n  const onsubmitHandle = () => {\r\n    console.log(search);\r\n  };\r\n  const [arr, setArr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios.get(\"https://api.fsn365.com/blocks\");\r\n\r\n      setArr(result.data.data.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navinput />\r\n      <div className=\"blocksdiv\">\r\n        <div className=\"blockstext\">Blocks</div>\r\n        <Paper className=\"root\">\r\n          <TableContainer className=\"container\">\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map(column => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {arr\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map(row => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.reward}\r\n                      >\r\n                        {columns.map(column => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell\r\n                              onClick={blockel(value)}\r\n                              key={column.id}\r\n                              align={column.align}\r\n                            >\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n            component=\"div\"\r\n            count={arr.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}