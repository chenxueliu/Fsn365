{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\2020\\u5DE5\\u4F5C\\u5BA4\\\\fsn365\\\\pages\\\\asset\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./index.less\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Navinput from \"../component/navinput/index\";\nvar columns = [{\n  id: \"asset\",\n  label: \"Asset\",\n  minWidth: 100\n}, {\n  id: \"assetid\",\n  label: \"Asse tId\",\n  minWidth: 200\n}, {\n  id: \"quantity\",\n  label: \"Quantity\",\n  minWidth: 170,\n  align: \"right\",\n  format: function format(value) {\n    return value.toLocaleString(\"en-US\");\n  }\n}];\nexport default function Assets() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, __jsx(Navinput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: \"tablecontainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Assets\"), __jsx(\"div\", {\n    className: \"tablebox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, __jsx(TableContainer, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, columns.map(function (column) {\n    return __jsx(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 23\n      }\n    }, column.label);\n  }))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row) {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.code,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    }, columns.map(function (column) {\n      var value = row[column.id];\n      return __jsx(TableCell, {\n        key: column.id,\n        align: column.align,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 31\n        }\n      }, column.format && typeof value === \"number\" ? column.format(value) : value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })))));\n}\n\n_s(Assets, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = Assets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Assets\");","map":{"version":3,"sources":["E:/2020工作室/fsn365/pages/asset/index.jsx"],"names":["React","useState","useEffect","axios","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Navinput","columns","id","label","minWidth","align","format","value","toLocaleString","Assets","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","rows","slice","row","code","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./index.less\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Navinput from \"../component/navinput/index\";\r\nconst columns = [\r\n  { id: \"asset\", label: \"Asset\", minWidth: 100 },\r\n  { id: \"assetid\", label: \"Asse tId\", minWidth: 200 },\r\n  {\r\n    id: \"quantity\",\r\n    label: \"Quantity\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n    format: value => value.toLocaleString(\"en-US\")\r\n  }\r\n];\r\n\r\nexport default function Assets() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  return (\r\n    <div>\r\n      <Navinput />\r\n      <main className=\"tablecontainer\">\r\n        <h2 className=\"text\">Assets</h2>\r\n        <div className=\"tablebox\">\r\n          <Paper className=\"root\">\r\n            <TableContainer className=\"container\">\r\n              <Table stickyHeader aria-label=\"sticky table\">\r\n                <TableHead>\r\n                  <TableRow>\r\n                    {columns.map(column => (\r\n                      <TableCell\r\n                        key={column.id}\r\n                        align={column.align}\r\n                        style={{ minWidth: column.minWidth }}\r\n                      >\r\n                        {column.label}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {rows\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map(row => {\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          role=\"checkbox\"\r\n                          tabIndex={-1}\r\n                          key={row.code}\r\n                        >\r\n                          {columns.map(column => {\r\n                            const value = row[column.id];\r\n                            return (\r\n                              <TableCell key={column.id} align={column.align}>\r\n                                {column.format && typeof value === \"number\"\r\n                                  ? column.format(value)\r\n                                  : value}\r\n                              </TableCell>\r\n                            );\r\n                          })}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n              rowsPerPageOptions={[10, 25, 100]}\r\n              component=\"div\"\r\n              count={rows.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n          </Paper>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}