{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\2020\\u5DE5\\u4F5C\\u5BA4\\\\fsn365\\\\pages\\\\blocks\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport \"./blocks.less\";\nimport axios from \"axios\";\nimport Nav from \"../Nav/index\";\nimport Footer from \"../component/footer/index\";\nimport Navinput from \"../component/navinput/index\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nvar columns = [{\n  id: \"height\",\n  label: \"Block\",\n  minWidth: 170,\n  align: \"center\"\n}, {\n  id: \"timestamp\",\n  label: \"Age\",\n  minWidth: 80,\n  align: \"center\"\n}, {\n  id: \"miner\",\n  label: \"Miner\",\n  minWidth: 170,\n  align: \"center\",\n  format: function format(value) {\n    return value.toLocaleString(\"en-US\");\n  }\n}, {\n  id: \"txns\",\n  label: \"Txn\",\n  minWidth: 170,\n  align: \"center\",\n  format: function format(value) {\n    return value.toLocaleString(\"en-US\");\n  }\n}, {\n  id: \"reward\",\n  label: \"Reward\",\n  minWidth: 170,\n  align: \"center\",\n  format: function format(value) {\n    return value.toFixed(2);\n  }\n}];\n\nvar blockel = function blockel(v) {\n  console.log(v);\n};\n\nexport default function Blocks() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState([]),\n      arr = _useState[0],\n      setArr = _useState[1];\n\n  useEffect(function () {\n    var fetchData = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"https://api.fsn365.com/blocks\");\n\n              case 2:\n                result = _context.sent;\n                setArr(result.data.data.data);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      page = _React$useState2[0],\n      setPage = _React$useState2[1];\n\n  var _React$useState3 = React.useState(10),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      rowsPerPage = _React$useState4[0],\n      setRowsPerPage = _React$useState4[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"blocksdiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"blockstext\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Blocks\"), __jsx(Paper, {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(TableContainer, {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(Table, {\n    stickyHeader: true,\n    \"aria-label\": \"sticky table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, columns.map(function (column) {\n    return __jsx(TableCell, {\n      key: column.id,\n      align: column.align,\n      style: {\n        minWidth: column.minWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, column.label);\n  }))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, arr.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (row) {\n    return __jsx(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: row.reward,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 23\n      }\n    }, columns.map(function (column) {\n      var value = row[column.id];\n      return __jsx(TableCell, {\n        onClick: blockel(value),\n        key: column.id,\n        align: column.align,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }\n      }, column.format && typeof value === \"number\" ? column.format(value) : value);\n    }));\n  })))), __jsx(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25, 50, 100],\n    component: \"div\",\n    count: arr.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Blocks, \"GqNcTIyE40wZS5H8+H5vA5WGZt0=\");\n\n_c = Blocks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blocks\");","map":{"version":3,"sources":["E:/2020工作室/fsn365/pages/blocks/index.jsx"],"names":["React","useState","useEffect","axios","Nav","Footer","Navinput","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","blockel","v","console","log","Blocks","arr","setArr","fetchData","get","result","data","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","map","column","slice","row","reward","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./blocks.less\";\r\nimport axios from \"axios\";\r\nimport Nav from \"../Nav/index\";\r\nimport Footer from \"../component/footer/index\";\r\nimport Navinput from \"../component/navinput/index\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst columns = [\r\n  { id: \"height\", label: \"Block\", minWidth: 170, align: \"center\" },\r\n  { id: \"timestamp\", label: \"Age\", minWidth: 80, align: \"center\" },\r\n  {\r\n    id: \"miner\",\r\n    label: \"Miner\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    format: value => value.toLocaleString(\"en-US\")\r\n  },\r\n  {\r\n    id: \"txns\",\r\n    label: \"Txn\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    format: value => value.toLocaleString(\"en-US\")\r\n  },\r\n  {\r\n    id: \"reward\",\r\n    label: \"Reward\",\r\n    minWidth: 170,\r\n    align: \"center\",\r\n    format: value => value.toFixed(2)\r\n  }\r\n];\r\n\r\nconst blockel = v => {\r\n  console.log(v);\r\n};\r\nexport default function Blocks() {\r\n  const [arr, setArr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const result = await axios.get(\"https://api.fsn365.com/blocks\");\r\n\r\n      setArr(result.data.data.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <div className=\"blocksdiv\">\r\n        <div className=\"blockstext\">Blocks</div>\r\n        <Paper className=\"root\">\r\n          <TableContainer className=\"container\">\r\n            <Table stickyHeader aria-label=\"sticky table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  {columns.map(column => (\r\n                    <TableCell\r\n                      key={column.id}\r\n                      align={column.align}\r\n                      style={{ minWidth: column.minWidth }}\r\n                    >\r\n                      {column.label}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {arr\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map(row => {\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        role=\"checkbox\"\r\n                        tabIndex={-1}\r\n                        key={row.reward}\r\n                      >\r\n                        {columns.map(column => {\r\n                          const value = row[column.id];\r\n                          return (\r\n                            <TableCell\r\n                              onClick={blockel(value)}\r\n                              key={column.id}\r\n                              align={column.align}\r\n                            >\r\n                              {column.format && typeof value === \"number\"\r\n                                ? column.format(value)\r\n                                : value}\r\n                            </TableCell>\r\n                          );\r\n                        })}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\r\n            component=\"div\"\r\n            count={arr.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}